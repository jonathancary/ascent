/*
* Ascent CSS v0.1.0 ---
* Copyright (c) 2018 Jonathan Cary Licensed under the MIT license
***************************************************** 
*	Ascent CSS 
*****************************************************
* 1. Initial
* 2. Variables
* 3. Typography
* 4. List
* 5. Link
* 6. Blockquote
* 7. Code
* 8. Button
* 9. Form
* 10. Table
* 11. Image
* 12. Divider
* 13. Spacing
* 14. Vertical Center Aligner
* 15. Card
* 16. Media Object
* 17. Backgrounds
* 18. Utility
* 19. Site Settings
* 20. Grid
* --- Notes
* --- Remove and Add 21+ to React Components
* 21. Header
* 22. Footer
*****************************************************
*/

/****************************************************
* 1. Initial
****************************************************/

/* Sets box-sizing globally for padding/border width */
*,
*:after,
*:before {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}


/****************************************************
* 2. Variables
****************************************************/

:root {

  /* Colors */
  --color-white: #fff;
  --color-black: #000; /* #141414 for Slight Off Black */
  --color-grey: #757575;
  --color-grey-light: #F4F5F6;
  --color-grey-dark: #1B1B1D;

  --color-body: #fff;
  --color-on-body: #000;

  --color-surface: #fff;
  --color-on-surface: #000;

  --color-primary: #2b2d42;
  --color-primary-light: #515364;
  --color-primary-dark: #1c1d2a;
  --color-on-primary: #fff;
  --color-on-primary-alt: #000;

  --color-secondary: #ef233C;
  --color-secondary-light: #f14b5f;
  --color-secondary-dark: #d90429;
  --color-on-seconday: #fff;
  --color-on-seconday-alt: #000;

  --color-alternate: #8d99ae;
  --color-alternate-light: #acb4c4;
  --color-alternate-dark: #5a626f;
  --color-on-alternate: #000;
  --color-on-alternate-alt: #fff;

  --color-success: #4caf50;
  --color-on-success: #fff;

  --color-error: #f44336;
  --color-on-error: #fff;	
  
  /* Border Radius */
  --border-radius-primary: 4px;
  --border-radius-secondary: 0px;

  /* Fonts */
  --font-primary: 'Open Sans', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  --font-secondary: 'Merriweather', 'Georgia', 'Times', 'Times New Roman', serif;

}
  

/****************************************************
* 3. Typography
****************************************************/

/* Default body styles */
body {
  color: var(--color-black);
  font-family: var(--font-primary);
  font-size: 16px; 
  font-weight: 300;
  letter-spacing: 0px;
  line-height: 1.6;
}

b,
strong {
  font-weight: bold;
}

p,
small {
  margin-top: 0;
  font-family: var(--font-secondary);
}

small {
  font-size: 10px;
}

mark { /* Highlight Color */
  background-color: #fff59d;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 300;
  margin-bottom: 20px;
  margin-top: 0;
  font-family: var(--font-primary);
}

h1 {
  font-size: 46px;
  line-height: 1.2;
}

h2 {
  font-size: 36px;
  line-height: 1.25;
}

h3 {
  font-size: 28px;
  line-height: 1.3;
}

h4 {
  font-size: 22px;
  line-height: 1.35;
}

h5 {
  font-size: 18px;
  line-height: 1.5;
}

h6 {
  font-size: 16px;
  line-height: 1.4;
}


/****************************************************
* 4. List
****************************************************/

dl,
ol,
ul {
  list-style: inside;
  margin-top: 0;
  padding-left: 0;
}

dl dl,
dl ol,
dl ul,
ol dl,
ol ol,
ol ul,
ul dl,
ul ol,
ul ul {
  font-size: 14px;
  margin: 15px 0 15px 30px;
}

ol {
  list-style: decimal inside;
}

ul {
  list-style: inside;
}

dt {
  font-weight: bold;
}

dd {
  margin-left: 0;
}

.list-unstyled {
  list-style: none;
}


/****************************************************
* 5. Link
****************************************************/

a {
  color: var(--color-secondary);
  text-decoration: none;
}

a:focus, 
a:hover {
  color: var(--color-secondary-dark);
  cursor: pointer;
}


/****************************************************
* 6. Blockquote
****************************************************/

blockquote {
  border-left: 3px solid var(--color-grey);
  margin-left: 0;
  margin-right: 0;
  padding: 10px 15px;
}

blockquote *:last-child {
  margin-bottom: 0;
}


/****************************************************
* 7. Code
****************************************************/

code {
  background: var(--color-grey-light);
  border-radius: var(--border-radius-primary);
  font-size: 14px;
  margin: 0 2px;
  padding: 2px 5px;
  white-space: nowrap;
}

pre {
  background: var(--color-grey-light);
  border-left: 3px solid var(--color-primary);
  overflow-y: hidden;
}

pre > code {
  border-radius: 0;
  display: block;
  padding: 10px 15px;
  white-space: pre;
}


/****************************************************
* 8. Button
****************************************************/

/* Defaults to Primary Color */
.button,
button,
input[type='button'],
input[type='reset'],
input[type='submit'] {
  background-color: var(--color-primary);
  border: 1px solid var(--color-primary);
  border-radius: 4px;
  color: var(--color-on-primary);
  cursor: pointer;
  display: inline-block;
  font-size: 12px;
  font-weight: 600;
  height: 38px;
  letter-spacing: 0px;
  line-height: 37px;
  padding: 0 30px;
  text-align: center;
  text-decoration: none;
  text-transform: none;
  white-space: nowrap;
  transition: all 0.3s ease 0s;
}
.button.buttonSmall{
  font-size: 9px;
  font-weight: 600;
  height: 25px;
  letter-spacing: 0px;
  line-height: 24px;
  padding: 0 10px;
}
.button.buttonLarge{
  font-size: 15px;
  font-weight: 600;
  height: 50px;
  letter-spacing: 0px;
  line-height: 48px;
  padding: 0 35px;
}
.button.buttonPrimaryLight {
  background-color: var(--color-primary-light);
  border-color: var(--color-primary-light);
  color: var(--color-on-seconday);
}
.button.buttonPrimaryDark {
  background-color: var(--color-primary-dark);
  border-color: var(--color-primary-dark);
  color: var(--color-on-primary);
}

/* Secondary Color */
.button.buttonSecondary {
  background-color: var(--color-secondary);
  border-color: var(--color-secondary);
  color: var(--color-on-seconday);
}
.button.buttonSecondaryLight {
  background-color: var(--color-secondary-light);
  border-color: var(--color-secondary-light);
  color: var(--color-on-seconday);
}
.button.buttonSecondaryDark {
  background-color: var(--color-secondary-dark);
  border-color: var(--color-secondary-dark);
  color: var(--color-on-seconday);
}

/* Alternate Color */
.button.buttonAlternate {
  background-color: var(--color-alternate);
  border-color: var(--color-alternate);
  color: var(--color-on-alternate);
}
.button.buttonAlternateLight {
  background-color: var(--color-alternate-light);
  border-color: var(--color-alternate-light);
  color: var(--color-on-alternate);
}
.button.buttonAlternateDark {
  background-color: var(--color-alternate-dark);
  border-color: var(--color-alternate-dark);
  color: var(--color-on-alternate-alt);
}

/* Hover and Focus States */
.button:focus, 
.button:hover,
button:focus,
button:hover,
input[type='button']:focus,
input[type='button']:hover,
input[type='reset']:focus,
input[type='reset']:hover,
input[type='submit']:focus,
input[type='submit']:hover {
  background-color: var(--color-primary-dark);
  border-color: var(--color-primary-dark);
  color: var(--color-on-primary);
  outline: 0;
}
.button.buttonPrimaryLight:focus,
.button.buttonPrimaryLight:hover {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
  color: var(--color-on-primary);
}
.button.buttonPrimaryDark:focus,
.button.buttonPrimaryDark:hover {
  background-color: var(--color-primary);
  border-color: var(--color-primary);
  color: var(--color-on-primary);
}

/* Secondary Hover and Focus */
.button.buttonSecondary:focus,
.button.buttonSecondary:hover {
  background-color: var(--color-secondary-dark);
  border-color: var(--color-secondary-dark);
  color: var(--color-on-seconday);
}
.button.buttonSecondaryLight:focus,
.button.buttonSecondaryLight:hover {
  background-color: var(--color-secondary);
  border-color: var(--color-secondary);
  color: var(--color-on-seconday);
}
.button.buttonSecondaryDark:focus,
.button.buttonSecondaryDark:hover {
  background-color: var(--color-secondary);
  border-color: var(--color-secondary);
  color: var(--color-on-seconday);
}

/* Alternate Hover and Focus */
.button.buttonAlternate:focus,
.button.buttonAlternate:hover {
  background-color: var(--color-alternate-dark);
  border-color: var(--color-alternate-dark);
  color: var(--color-on-alternate);
}
.button.buttonAlternateLight:focus,
.button.buttonAlternateLight:hover {
  background-color: var(--color-alternate);
  border-color: var(--color-alternate);
  color: var(--color-on-alternate);
}
.button.buttonAlternateDark:focus,
.button.buttonAlternateDark:hover {
  background-color: var(--color-alternate);
  border-color: var(--color-alternate);
  color: var(--color-on-alternate-alt);
}

/* Outlined Primary Button */
.buttonOutline {
  background-color: transparent;
  color: var(--color-primary);
}

.buttonOutline:focus, 
.buttonOutline:hover {
  background-color: transparent;
  border-color: var(--color-primary-dark);
  color: var(--color-primary-dark);
}

.buttonOutline[disabled]:focus, 
.buttonOutline[disabled]:hover {
  border-color: inherit;
  color: var(--color-primary);
  cursor: default;
  opacity: .5;
}
/* Outlined Secondary Button */
.buttonSecondary.buttonOutline,
button.buttonSecondary.buttonOutline,
input.buttonSecondary.buttonOutline {
  background-color: transparent;
  color: var(--color-secondary);
}
.buttonSecondary.buttonOutline:focus, 
.buttonSecondary.buttonOutline:hover,
button.buttonSecondary.buttonOutline:focus, 
button.buttonSecondary.buttonOutline:hover,
input.buttonSecondary.buttonOutline:focus, 
input.buttonSecondary.buttonOutline:hover {
  background-color: transparent;
  border-color: var(--color-secondary-dark);
  color: var(--color-secondary-dark);
}
.buttonSecondary.buttonOutline[disabled]:focus, 
.buttonSecondary.buttonOutline[disabled]:hover,
button.buttonSecondary.buttonOutline[disabled]:focus, 
button.buttonSecondary.buttonOutline[disabled]:hover,
input.buttonSecondary.buttonOutline[disabled]:focus, 
input.buttonSecondary.buttonOutline[disabled]:hover {
  border-color: inherit;
  color: var(--color-secondary);
  cursor: default;
  opacity: .5;
}

/* Outlined Alternate Button */
.buttonAlternate.buttonOutline,
button.buttonAlternate.buttonOutline,
input.buttonAlternate.buttonOutline {
  background-color: transparent;
  color: var(--color-alternate);
}
.buttonAlternate.buttonOutline:focus, 
.buttonAlternate.buttonOutline:hover,
button.buttonAlternate.buttonOutline:focus, 
button.buttonAlternate.buttonOutline:hover,
input.buttonAlternate.buttonOutline:focus, 
input.buttonAlternate.buttonOutline:hover {
  background-color: transparent;
  border-color: var(--color-alternate-dark);
  color: var(--color-alternate-dark);
}
.buttonAlternate.buttonOutline[disabled]:focus, 
.buttonAlternate.buttonOutline[disabled]:hover,
button.buttonAlternate.buttonOutline[disabled]:focus, 
button.buttonAlternate.buttonOutline[disabled]:hover,
input.buttonAlternate.buttonOutline[disabled]:focus, 
input.buttonAlternate.buttonOutline[disabled]:hover {
  border-color: inherit;
  color: var(--color-alternate);
  cursor: default;
  opacity: .5;
}

/* Clear Primary Button */
.buttonClear,
button.buttonClear,
input.buttonClear {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-primary);
}
.buttonClear:focus, 
.buttonClear:hover,
button.buttonClear:focus, 
button.buttonClear:hover,
input.buttonClear:focus, 
input.buttonClear:hover {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-primary-dark);
}
.buttonClear[disabled]:focus, 
.buttonClear[disabled]:hover,
button.buttonClear[disabled]:focus, 
button.buttonClear[disabled]:hover,
input.buttonClear[disabled]:focus, 
input.buttonClear[disabled]:hover {
  color: var(--color-primary);
}

/* Clear Secondary Button */
.buttonSecondary.buttonClear,
button.buttonSecondary.buttonClear,
input.buttonSecondary.buttonClear {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-secondary);
}
.buttonSecondary.buttonClear:focus, 
.buttonSecondary.buttonClear:hover,
button.buttonSecondary.buttonClear:focus, 
button.buttonSecondary.buttonClear:hover,
input.buttonSecondary.buttonClear:focus, 
input.buttonSecondary.buttonClear:hover {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-secondary-dark);
}
.buttonSecondary.buttonClear[disabled]:focus, 
.buttonSecondary.buttonClear[disabled]:hover,
button.buttonSecondary.buttonClear[disabled]:focus, 
button.buttonSecondary.buttonClear[disabled]:hover,
input.buttonSecondary.buttonClear[disabled]:focus, 
input.buttonSecondary.buttonClear[disabled]:hover {
  color: var(--color-secondary);
}

/* Clear Alternate Button */
.buttonAlternate.buttonClear,
button.buttonAlternate.buttonClear,
input.buttonAlternate.buttonClear {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-alternate);
}
.buttonAlternate.buttonClear:focus, 
.buttonAlternate.buttonClear:hover,
button.buttonAlternate.buttonClear:focus, 
button.buttonAlternate.buttonClear:hover,
input.buttonAlternate.buttonClear:focus, 
input.buttonAlternate.buttonClear:hover {
  background-color: transparent;
  border-color: transparent;
  color: var(--color-alternate-dark);
}
.buttonAlternate.buttonClear[disabled]:focus, 
.buttonAlternate.buttonClear[disabled]:hover,
button.buttonAlternate.buttonClear[disabled]:focus, 
button.buttonAlternate.buttonClear[disabled]:hover,
input.buttonAlternate.buttonClear[disabled]:focus, 
input.buttonAlternate.buttonClear[disabled]:hover {
  color: var(--color-alternate);
}

/* Disabled Button */
.button[disabled],
button[disabled],
input[type='button'][disabled],
input[type='reset'][disabled],
input[type='submit'][disabled] {
  cursor: default;
  opacity: .5;
}

/* Disabled Button Hover and Focus*/
.button[disabled]:focus, 
.button[disabled]:hover,
button[disabled]:focus,
button[disabled]:hover,
input[type='button'][disabled]:focus,
input[type='button'][disabled]:hover,
input[type='reset'][disabled]:focus,
input[type='reset'][disabled]:hover,
input[type='submit'][disabled]:focus,
input[type='submit'][disabled]:hover {
  cursor: default;
  opacity: .5;
}


/****************************************************
* 9. Form
****************************************************/

input[type='email'],
input[type='number'],
input[type='password'],
input[type='search'],
input[type='tel'],
input[type='text'],
input[type='url'],
textarea,
select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: 1px solid var(--color-grey-dark);
  border-radius: 4px;
  box-shadow: none;
  box-sizing: inherit;
  height: 38px;
  padding: 6px 10px;
  width: 100%;
}

input[type='email']:focus,
input[type='number']:focus,
input[type='password']:focus,
input[type='search']:focus,
input[type='tel']:focus,
input[type='text']:focus,
input[type='url']:focus,
textarea:focus,
select:focus {
  border-color: var(--color-black);
  outline: 0;
}

select {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="14" viewBox="0 0 29 14" width="29"><path fill="#757575" d="M9.37727 3.625l5.08154 6.93523L19.54036 3.625"/></svg>') center right no-repeat;
  padding-right: 30px;
}

select:focus {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="14" viewBox="0 0 29 14" width="29"><path fill="#757575" d="M9.37727 3.625l5.08154 6.93523L19.54036 3.625"/></svg>');
}

textarea {
  min-height: 65px;
  resize: vertical; /* user can resize vertically, but width is fixed */
}

label,
legend {
  display: block;
  font-size: 16px;
  font-weight: 700;
  margin-bottom: 5px;
}

fieldset {
  border-width: 0;
  padding: 0;
}

input[type='checkbox'],
input[type='radio'] {
  display: inline;
}

.labelInline {
  display: inline-block;
  font-weight: normal;
  margin-left: 5px;
}


/****************************************************
* 10. Table
****************************************************/

table {
  border-spacing: 0;
  width: 100%;
}

td,
th {
  border-bottom: 1px solid var(--color-grey-dark);
  padding: 12px 15px;
  text-align: left;
}

td:first-child,
th:first-child {
  padding-left: 0;
}

td:last-child,
th:last-child {
  padding-right: 0;
}


/****************************************************
* 11. Image
****************************************************/

img {
  max-width: 100%;
}

.imageRoundedCorners {
  border-radius: var(--border-radius-primary);
}

.imageCircle {
  clip-path: circle(60px at center);
}


/****************************************************
* 12. Divider
****************************************************/

hr {
  width: 100%;
  border: 0;
  border-top: 1px solid var(--color-grey-dark);
  margin: 30px 0;
}


/****************************************************
* 13. Spacing
****************************************************/

.button,
button,
dd,
dt,
li {
  margin-bottom: 10px;
}

fieldset,
input,
select,
textarea {
  margin-bottom: 15px;
}

blockquote,
dl,
figure,
form,
ol,
p,
pre,
table,
ul {
  margin-bottom: 25px;
}


/****************************************************
* 14. Vertical Center Aligner
****************************************************/
.aligner {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 24em;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.alignerItem {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.alignerItemTop {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}
.alignerItemBottom {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end;
}
.alignerItemFixed {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  max-width: 50%;
}


/****************************************************
* 15. Card
****************************************************/
.card {
  padding: 0.8em 1em 0;
  background: hsla(31, 15%, 50%, 0.1);
  border-radius: 3px;
}
.card:after {
  content: "\00a0";
  display: block;
  margin-top: 1em;
  height: 0;
  visibility: hidden;
}

.cardSpaced {
  margin-bottom: 24px;
}


/****************************************************
* 16. Media Object
****************************************************/
.media {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  margin-bottom: 1em;
}
.mediaFigure {
  margin-right: 1em;
}
.mediaBody {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
.mediaBody,
.mediaBody :last-child {
  margin-bottom: 0;
}
.mediaTitle {
  margin: 0 0 0.5em;
}
.mediaCenter {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}
.mediaReverse > .mediaFigure {
  -webkit-box-ordinal-group: 2;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
  margin: 0 0 0 1em;
}


/****************************************************
* 17. Backgrounds
****************************************************/
.bgWhite {
  background-color: var(--color-white);
}
.bgGrey {
  background-color: var(--color-grey);
  color: var(--color-on-body);
}
.bgGreyLight {
  background-color: var(--color-grey-light);
  color: var(--color-on-body);
}
.bgGreyDark {
  background-color: var(--color-grey-dark);
  color: var(--color-white);
}
.bgPrimary {
  background-color: var(--color-primary);
  color: var(--color-on-primary);
}
.bgPrimaryLight {
  background-color: var(--color-primary-light);
  color: var(--color-on-primary);
}
.bgPrimaryDark {
  background-color: var(--color-primary-dark);
  color: var(--color-on-primary);
}
.bgSecondary {
  background-color: var(--color-secondary);
  color: var(--color-on-seconday);
}
.bgSecondaryLight {
  background-color: var(--color-secondary-light);
  color: var(--color-on-seconday);
}
.bgSecondaryDark {
  background-color: var(--color-secondary-dark);
  color: var(--color-on-seconday);
}
.bgAlternate {
  background-color: var(--color-alternate);
  color: var(--color-on-alternate);
}
.bgAlternateLight {
  background-color: var(--color-alternate-light);
  color: var(--color-on-alternate);
}
.bgAlternateDark {
  background-color: var(--color-alternate-dark);
  color: var(--color-on-alternate);
}
.bgSuccess {
  background-color: var(--color-success);
  color: var(--color-on-success);
}
.bgError {
  background-color: var(--color-error);
  color: var(--color-on-error);
}


/****************************************************
* 18. Utility
****************************************************/

/* Clear a float with .clearfix */
.uClearfix:after {
  clear: both;
  content: ' '; /* The space content is one way to avoid an Opera bug. */
  display: table;
}

/* Float either direction */
.uFloatLeft {
  float: left;
}

.uFloatRight {
  float: right;
}

/* Depth Box Shadows */
.uShadow1 {
  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}
.uShadow2 {
  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
}
.uShadow3 {
  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
}
.uShadow4 {
  box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
}
.uShadow5 {
  box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
}

/* Text Alignment */
.uTextBreak {
  word-wrap: break-word !important;
}
.uTextCenter {
  text-align: center !important;
}
.uTextLeft {
  text-align: left !important;
}
.uTextRight {
  text-align: right !important;
}
.uIeMinHeightBugFix {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

/* Text Transformers */
.uTextLowercase {
  text-transform: lowercase;
}
.uTextUppercase {
  text-transform: uppercase;
}
.uTextCapitalize {
  text-transform: capitalize;
}

/* Display and Visibility */
.uShow {
  display: block !important;
}
.uHidden {
  display: none !important;
}
.uInvisible {
  visibility: hidden;
}


/****************************************************
* 19. Site Settings
****************************************************/

/*
* 1. Avoid the IE 10-11 `min-height` bug.
* 2. Set `flex-shrink` to `0` to prevent some browsers from
*    letting these items shrink to smaller than their content's default
*    minimum size. See http://bit.ly/1Mn35US for details.
* 3. Use `%` instead of `vh` since `vh` is buggy in older mobile Safari.
*
* -- Helps allow for Sitcky Footer.
*/

.site {
  display: flex;
  flex-direction: column;
  height: 100%; /* 1, 3 */
}

.siteHeader,
.siteFooter {
  flex: none; /* 2 */
}

.siteContent {
  flex: 1 0 auto; /* 2 */
  padding: 32px 32px 0;
  width: 100%;
}
.siteContent::after {
  content: '\00a0'; /* &nbsp; */
  display: block;
  margin-top: 32px;
  height: 0px;
  visibility: hidden;
}
@media (min-width: 768px) {
  .siteContent {
    padding: 32px 125px 0;
  }
  .siteContent:after {
    margin-top: 32px;
  }
}
.siteContentFull {
  padding: 0;
}
.siteContentFull:after {
  content: none;
}


/****************************************************
* 20. Grid
****************************************************/

.grid {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.gridCell {  
  flex: 1;
}

.gridFlexCells > .gridCell {
  display: flex;
}

/* Alignment per row */
.gridTop {
  align-items: flex-start;
}

.gridBottom {
  align-items: flex-end;
}

.gridCenter {
  align-items: center;
}

.gridJustifyCenter {
  justify-content: center;
}

/* Alignment per cell */
.gridCellTop {
  align-self: flex-start;
}

.gridCellBottom {
  align-self: flex-end;
}

.gridCellCenter {
  align-self: center;
}

.gridCellAutoSize {
  flex: none;
}

/* Base classes for all media */
.gridFit > .gridCell {
  flex: 1;
}

.gridFull > .gridCell {
  flex: 0 0 100%;
}

.grid1of2 > .gridCell {
  flex: 0 0 50%;
}

.grid1of3 > .gridCell {
  flex: 0 0 33.3333%;
}

.grid1of4 > .gridCell {
  flex: 0 0 25%;
}

/* Small screens and larger */
@media (min-width: 384px) {
  .smallGridFit > .gridCell {
    flex: 1;
  }
  .smallGridFull > .gridCell {
    flex: 0 0 100%;
  }
  .smallGrid1of2 > .gridCell {
    flex: 0 0 50%;
  }
  .smallGrid1of3 > .gridCell {
    flex: 0 0 33.3333%;
  }
  .smallGrid1of4 > .gridCell {
    flex: 0 0 25%;
  }
}

/* Medium screens and larger */
@media (min-width: 576px) {
  .medGridFit > .gridCell {
    flex: 1;
  }
  .medGridFull > .gridCell {
    flex: 0 0 100%;
  }
  .medGrid1of2 > .gridCell {
    flex: 0 0 50%;
  }
  .medGrid1of3 > .gridCell {
    flex: 0 0 33.3333%;
  }
  .medGrid1of4 > .gridCell {
    flex: 0 0 25%;
  }
}

/* Large screens and larger */
@media (min-width: 768px) {
  .largeGridFit > .gridCell {
    flex: 1;
  }
  .largeGridFull > .gridCell {
    flex: 0 0 100%;
  }
  .largeGrid1of2 > .gridCell {
    flex: 0 0 50%;
  }
  .largeGrid1of3 > .gridCell {
    flex: 0 0 33.3333%;
  }
  .largeGrid1of4 > .gridCell {
    flex: 0 0 25%;
  }
}

/* With gutters */
.gridGutters {
  margin: -1em 0 1em -1em;
}
.gridGutters > .gridCell {
  padding: 1em 0 0 1em;
}

.gridGuttersLG {
  margin: -1.5em 0 1.5em -1.5em;
}
.gridGuttersLG > .gridCell {
  padding: 1.5em 0 0 1.5em;
}

.gridGuttersXL {
  margin: -2em 0 2em -2em;
}
.gridGuttersXL > .gridCell {
  padding: 2em 0 0 2em;
}

@media (min-width: 384px) {
  .smallGridGutters {
    margin: -1em 0 1em -1em;
  }
  .smallGridGutters > .gridCell {
    padding: 1em 0 0 1em;
  }
  .smallGridGuttersLG {
    margin: -1.5em 0 1.5em -1.5em;
  }
  .smallGridGuttersLG > .gridCell {
    padding: 1.5em 0 0 1.5em;
  }
  .smallGridGuttersLG {
    margin: -2em 0 2em -2em;
  }
  .smallGridGuttersLG > .gridCell {
    padding: 2em 0 0 2em;
  }
}

@media (min-width: 576px) {
  .medGridGutters {
    margin: -1em 0 1em -1em;
  }
  .medGridGutters > .gridCell {
    padding: 1em 0 0 1em;
  }
  .medGridGuttersLG {
    margin: -1.5em 0 1.5em -1.5em;
  }
  .medGridGuttersLG > .gridCell {
    padding: 1.5em 0 0 1.5em;
  }
  .medGridGuttersXL {
    margin: -2em 0 2em -2em;
  }
  .medGridGuttersXL > .gridCell {
    padding: 2em 0 0 2em;
  }
}

@media (min-width: 768px) {
  .largeGridGutters {
    margin: -1em 0 1em -1em;
  }
  .largeGridGutters > .gridCell {
    padding: 1em 0 0 1em;
  }
  .largeGridGuttersLG {
    margin: -1.5em 0 1.5em -1.5em;
  }
  .largeGridGuttersLG > .gridCell {
    padding: 1.5em 0 0 1.5em;
  }
  .largeGridGuttersXL {
    margin: -2em 0 2em -2em;
  }
  .largeGridGuttersXL > .gridCell {
    padding: 2em 0 0 2em;
  }
}

/* Grid Utilities */
.uFull {
  width: 100% !important;
}
.u1of2,
.uFull {
  -webkit-box-flex: 0 !important;
  -webkit-flex: none !important;
  -ms-flex: none !important;
  flex: none !important;
}
.u1of2 {
  width: 50% !important;
}
.u1of3 {
  width: 33.3333% !important;
}
.u1of3,
.u2of3 {
  -webkit-box-flex: 0 !important;
  -webkit-flex: none !important;
  -ms-flex: none !important;
  flex: none !important;
}
.u2of3 {
  width: 66.6667% !important;
}
.u1of4 {
  width: 25% !important;
}
.u1of4,
.u3of4 {
  -webkit-box-flex: 0 !important;
  -webkit-flex: none !important;
  -ms-flex: none !important;
  flex: none !important;
}
.u3of4 {
  width: 75% !important;
}
@media (min-width: 384px) {
  .uSmallFull {
    width: 100% !important;
  }
  .uSmall1of2,
  .uSmallFull {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uSmall1of2 {
    width: 50% !important;
  }
  .uSmall1of3 {
    width: 33.3333% !important;
  }
  .uSmall1of3,
  .uSmall2of3 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uSmall2of3 {
    width: 66.6667% !important;
  }
  .uSmall1of4 {
    width: 25% !important;
  }
  .uSmall1of4,
  .uSmall3of4 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uSmall3of4 {
    width: 75% !important;
  }
}
@media (min-width: 576px) {
  .uMedFull {
    width: 100% !important;
  }
  .uMed1of2,
  .uMedFull {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uMed1of2 {
    width: 50% !important;
  }
  .uMed1of3 {
    width: 33.3333% !important;
  }
  .uMed1of3,
  .uMed2of3 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uMed2of3 {
    width: 66.6667% !important;
  }
  .uMed1of4 {
    width: 25% !important;
  }
  .uMed1of4,
  .uMed3of4 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uMed3of4 {
    width: 75% !important;
  }
}
@media (min-width: 768px) {
  .uLargeFull {
    width: 100% !important;
  }
  .uLarge1of2,
  .uLargeFull {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uLarge1of2 {
    width: 50% !important;
  }
  .uLarge1of3 {
    width: 33.3333% !important;
  }
  .uLarge1of3,
  .uLarge2of3 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uLarge2of3 {
    width: 66.6667% !important;
  }
  .uLarge1of4 {
    width: 25% !important;
  }
  .uLarge1of4,
  .uLarge3of4 {
    -webkit-box-flex: 0 !important;
    -webkit-flex: none !important;
    -ms-flex: none !important;
    flex: none !important;
  }
  .uLarge3of4 {
    width: 75% !important;
  }
}

/****************************************************
* --- Notes
****************************************************/

/* Mobile First Media Queries
*
* iPhone X, Xs
* @media (min-width: 375px)
*
* iPhone Xs Max
* @media (min-width: 414px) 
*
* Pixel 2
* @media (min-width: 411px)
*
* Pixel 2 XL
* @media (min-width: 411px)
*
* iPad
* @media (min-width: 768px) 
* 
* iPad Pro
* @media (min-width: 1024px) 
*
* Laptop 
* @media (min-width: 1200px) 
*
* Desktop 
* @media (min-width: 1800px) 
*
*/

/****************************************************
* REMOVE THE FOLLOWING SECTIONS AND 
* ADD WITHIN SPECIFIC REACT COMPONENT CSS
****************************************************/

/****************************************************
* 21. Header
****************************************************/
.header {
  padding: 30px;
  background-color: hsla(31, 15%, 50%, 0.1);
  text-align: center;
}
@media (min-width: 768px) {
  .header {
    padding: 40px 25pxem;
  }
}


/****************************************************
* 22. Footer
****************************************************/
.footer {
  padding: 24px;
  background: #404040;
  color: #999;
  font-size: 16px;
  overflow-x: hidden;
  text-align: center;
}